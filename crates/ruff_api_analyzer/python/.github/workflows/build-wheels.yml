name: Build wheels

on:
  release:
    types: [created]
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build ${{ matrix.os }} wheel
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Get all history for proper version detection

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Build wheels
        run: |
          python -m pip install --upgrade pip
          pip install build wheel
          cd crates/ruff_api_analyzer
          cargo build --release
          cd python
          python -m build

      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels-${{ matrix.os }}-py${{ matrix.python-version }}
          path: crates/ruff_api_analyzer/python/dist/*.whl

  upload_pypi:
    name: Upload to PyPI
    needs: [build_wheels]
    runs-on: ubuntu-latest
    # Only release to PyPI on tag pushes
    if: github.event_name == 'release' && startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: dist

      - name: Prepare distribution files
        run: |
          mkdir -p dist_upload
          find dist -name "*.whl" -exec cp {} dist_upload \;

      - name: Upload to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages-dir: dist_upload/
