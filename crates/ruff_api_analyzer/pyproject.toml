[build-system]
# Use maturin as the build backend
requires = ["maturin>=1.6,<2.0"]
build-backend = "maturin"

[project]
name = "pubscan"
dynamic = ["version"] # Reads version from Cargo.toml
description = "A tool for analyzing Python module's public API surface area"
readme = "python/README.md" # Adjusted path relative to this file
authors = [
    {name = "Ruff Developers", email = "info@ruff.rs"}
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8", # Updated min version based on maturin typical support
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12", # Added 3.12
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Quality Assurance",
    "Programming Language :: Rust", # Added Rust classifier
]
requires-python = ">=3.8" # Updated min Python version

[project.urls]
Homepage = "https://github.com/astral-sh/ruff"
Documentation = "https://docs.astral.sh/ruff"
Repository = "https://github.com/astral-sh/ruff"

# Remove script entry point, users will run the 'api-analyzer' binary directly
# [project.scripts]
# pubscan = "pubscan.cli:main"

[tool.maturin]
# Point to the subdirectory containing the Python package source
python-source = "python"
# No manifest-path needed when pyproject.toml is next to Cargo.toml
# manifest-path = ...

# --- cibuildwheel configuration ---\n# Keep build/skip/arch settings, remove others handled by maturin/workflow
[tool.cibuildwheel]
# Skip PyPy and musllinux
skip = ["pp*", "*-musllinux*"]

# Build only once per platform, wheel is py3-none
build = ["cp310-*"]

# Remove environment settings previously needed for setuptools
# environment = {CIBUILDWHEEL = "1", FORCE_BDIST_WHEEL_PLATFORM = "1"}

# Remove before-build, maturin handles setup
# before-build = ["pip install -e ."]

# Remove test command, will run in workflow
# test-command = "pubscan --help"

# Remove repair command, maturin handles platform tags
# repair-wheel-command = ""

[tool.cibuildwheel.linux]
# Explicitly build only x86_64
archs = ["x86_64"]
# Remove before-all, Rust install handled by CIBW_BEFORE_BUILD in workflow
# before-all = ["yum update -y && yum groupinstall -y 'Development Tools'"]

[tool.cibuildwheel.windows]
archs = ["auto"]

[tool.cibuildwheel.macos]
# Only build for arm64 on macOS for now
archs = ["arm64"]

# Remove tool.wheel section, not needed for maturin
# [tool.wheel]
# flat_destination = true
# force-platform-specific = true 